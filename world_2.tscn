[gd_scene load_steps=9 format=3 uid="uid://kiryfhcp1pkm"]

[ext_resource type="Texture2D" uid="uid://d2cxmlwr8t3o" path="res://asset/tiles/tilemap_packed.png" id="2_3j8jm"]

[sub_resource type="GDScript" id="GDScript_vcxo4"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_04wn5"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_ogpwh"]

[sub_resource type="Gradient" id="Gradient_h8m1w"]

[sub_resource type="GradientTexture1D" id="GradientTexture1D_esj7i"]
gradient = SubResource("Gradient_h8m1w")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_rqpju"]
texture = ExtResource("2_3j8jm")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
11:0/0 = 0
11:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -8, -8, 2.375, -8, 8, -8, 8, -5.125, -5, -4.875, -5.125, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 2.375, -8, 8, -8, 8, -5.125, -8, -5)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 2.375, -8, 8, -8, 8, 8, 4.875, 8, 5, -5.125, -8, -5)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -8, -8, -5, -8, -5.125, 8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(5.125, 8, 5, -8, 8, -8, 8, 5.125, 8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -4.875, -8, -4.875, 5, 8, 5.125, 8, 8, -8, 8)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 5, 8, 5.125, 8, 8, -8, 8)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 4.875, 5, 4.75, 5, -8, 8, -8, 8, 5.125, 8, 8, -8, 8)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-4.125, 8, -4.125, -5.875, 8, -5.875, 8, 5.625, 3.875, 5.75, 3.75, 8)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 5.875, -8, -6, 8, -5.875, 8, 6)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6.125, -8, -6.125, 4, -6.125, 3.875, 8, -4.375, 8, -4.375, 6.125)
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
11:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(3.875, -5.875, 4, 8, -3.875, 8, -4, -5.875)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(3.875, -8, 4, 8, -3.875, 8, -3.875, -8)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(3.875, -8, 4, 8, -3.875, 8, -3.875, -8)
11:4/0 = 0
11:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:4/0/physics_layer_0/angular_velocity = 0.0
11:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(3.875, -8, 4, 8, -3.875, 8, -3.875, -8)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3.875, 6, -3.875, -8, 4, -8, 4.125, -3, 8, -2.875, 8, 6)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6.125, -8, -6.125, 8, -5.875, 8, 6)
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6, -8, -3, -4.125, -3.125, -3.875, -8, 4, -8, 4.125, 6)
11:5/0 = 0
11:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:5/0/physics_layer_0/angular_velocity = 0.0
11:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(4.125, -8, 4.25, 6, -4, 5.875, -4, -8)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3.875, 6, -4, -6, 8, -6.125, 8, 5.875)
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6, -8, -6, 8, -6.125, 8, 5.875)
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
10:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6, -8, -5.875, 4, -6, 4, 6)
11:6/0 = 0
11:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:6/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
11:7/0 = 0
11:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6, -8, -1, 2.125, -6.875, 8, -6.75, 8, 2.125, -0.125, 8, -5.125, 8)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
11:8/0 = 0
11:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 6, -8, -5.875, 1.125, -6, 2.25, -3, 8, -3, 8, 5.875)
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
11:9/0 = 0
11:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
8:10/0 = 0
8:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0
11:10/0 = 0
11:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_3c6oq"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_rqpju")

[node name="World 2" type="Node2D"]

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
script = SubResource("GDScript_vcxo4")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
shape = SubResource("CapsuleShape2D_04wn5")

[node name="MeshInstance2D" type="MeshInstance2D" parent="CharacterBody2D"]
position = Vector2(-4.76837e-07, -0.499996)
scale = Vector2(20, 14.5)
mesh = SubResource("CapsuleMesh_ogpwh")
texture = SubResource("GradientTexture1D_esj7i")

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_3c6oq")
format = 2
layer_0/name = "Base"
layer_0/z_index = -5
layer_0/tile_data = PackedInt32Array(-720906, 65536, 2, -655370, 65536, 2, -589834, 65536, 2, -524298, 65536, 2, -458762, 65536, 2, -393226, 65536, 2, -327690, 65536, 2, -262154, 65536, 2, -196618, 65536, 2, -131082, 65536, 2, -65546, 65536, 2, -720905, 65536, 2, -655369, 65536, 2, -589833, 65536, 2, -524297, 65536, 2, -458761, 65536, 2, -393225, 65536, 2, -327689, 65536, 2, -262153, 393216, 3, -196617, 65536, 2, -131081, 65536, 2, -65545, 65536, 2, -720904, 65536, 2, -655368, 65536, 2, -589832, 327680, 3, -524296, 65536, 2, -458760, 65536, 2, -393224, 393216, 3, -327688, 65536, 2, -262152, 65536, 2, -196616, 65536, 2, -131080, 65536, 2, -65544, 65536, 2, -720903, 65536, 2, -655367, 65536, 2, -589831, 65536, 2, -524295, 65536, 2, -458759, 65536, 2, -393223, 65536, 2, -327687, 65536, 2, -262151, 65536, 2, -196615, 65536, 2, -131079, 65536, 2, -65543, 65536, 2, -720902, 65536, 2, -655366, 65536, 2, -589830, 65536, 2, -524294, 65536, 2, -458758, 65536, 2, -393222, 65536, 2, -327686, 65536, 2, -262150, 65536, 2, -196614, 65536, 2, -131078, 65536, 2, -65542, 65536, 2, -720901, 65536, 2, -655365, 65536, 2, -589829, 65536, 2, -524293, 65536, 2, -458757, 65536, 2, -393221, 65536, 2, -327685, 65536, 2, -262149, 65536, 2, -196613, 65536, 2, -131077, 65536, 2, -65541, 65536, 2, -720900, 65536, 2, -655364, 65536, 2, -589828, 65536, 2, -524292, 65536, 2, -458756, 65536, 2, -393220, 65536, 2, -327684, 65536, 2, -262148, 65536, 2, -196612, 65536, 2, -131076, 65536, 2, -65540, 65536, 2, -720899, 65536, 2, -655363, 65536, 2, -589827, 65536, 2, -524291, 327680, 3, -458755, 65536, 2, -393219, 65536, 2, -327683, 65536, 2, -262147, 262144, 3, -196611, 65536, 2, -131075, 65536, 2, -65539, 196608, 3, -720898, 65536, 2, -655362, 65536, 2, -589826, 65536, 2, -524290, 65536, 2, -458754, 65536, 2, -393218, 65536, 2, -327682, 262144, 3, -262146, 65536, 2, -196610, 65536, 2, -131074, 65536, 2, -65538, 65536, 2, -720897, 65536, 2, -655361, 65536, 2, -589825, 65536, 2, -524289, 65536, 2, -458753, 65536, 2, -393217, 65536, 2, -327681, 65536, 2, -262145, 65536, 2, -196609, 65536, 2, -131073, 65536, 2, -65537, 65536, 2, -10, 65536, 2, 65526, 65536, 2, 131062, 65536, 2, 196598, 65536, 2, 262134, 65536, 2, 327670, 65536, 2, 393206, 65536, 2, 458742, 65536, 2, 524278, 65536, 2, 589814, 65536, 2, 655350, 65536, 2, 720886, 65536, 2, 786422, 65536, 2, 851958, 65536, 2, -9, 65536, 2, 65527, 65536, 2, 131063, 65536, 2, 196599, 65536, 2, 262135, 65536, 2, 327671, 65536, 2, 393207, 65536, 2, 458743, 65536, 2, 524279, 65536, 2, 589815, 65536, 2, 655351, 65536, 2, 720887, 65536, 2, 786423, 65536, 2, 851959, 65536, 2, -8, 65536, 2, 65528, 65536, 2, 131064, 65536, 2, 196600, 65536, 2, 262136, 65536, 2, 327672, 65536, 2, 393208, 65536, 2, 458744, 65536, 2, 524280, 65536, 2, 589816, 65536, 2, 655352, 65536, 2, 720888, 65536, 2, 786424, 65536, 2, 851960, 65536, 2, -7, 65536, 2, 65529, 65536, 2, 131065, 65536, 2, 196601, 65536, 2, 262137, 65536, 2, 327673, 65536, 2, 393209, 65536, 2, 458745, 65536, 2, 524281, 65536, 2, 589817, 65536, 2, 655353, 65536, 2, 720889, 65536, 2, 786425, 65536, 2, 851961, 65536, 2, -6, 327680, 3, 65530, 65536, 2, 131066, 65536, 2, 196602, 65536, 2, 262138, 65536, 2, 327674, 393216, 3, 393210, 65536, 2, 458746, 65536, 2, 524282, 65536, 2, 589818, 65536, 2, 655354, 327680, 3, 720890, 65536, 2, 786426, 65536, 2, 851962, 393216, 3, -5, 65536, 2, 65531, 65536, 2, 131067, 65536, 2, 196603, 65536, 2, 262139, 65536, 2, 327675, 65536, 2, 393211, 65536, 2, 458747, 65536, 2, 524283, 65536, 2, 589819, 65536, 2, 655355, 65536, 2, 720891, 65536, 2, 786427, 65536, 2, 851963, 65536, 2, -4, 65536, 2, 65532, 65536, 2, 131068, 65536, 2, 196604, 65536, 2, 262140, 65536, 2, 327676, 65536, 2, 393212, 65536, 2, 458748, 65536, 2, 524284, 65536, 2, 589820, 65536, 2, 655356, 65536, 2, 720892, 65536, 2, 786428, 65536, 2, 851964, 65536, 2, -3, 65536, 2, 65533, 65536, 2, 131069, 196608, 3, 196605, 65536, 2, 262141, 65536, 2, 327677, 65536, 2, 393213, 65536, 2, 458749, 65536, 2, 524285, 65536, 2, 589821, 65536, 2, 655357, 65536, 2, 720893, 65536, 2, 786429, 65536, 2, 851965, 65536, 2, -2, 65536, 2, 65534, 65536, 2, 131070, 65536, 2, 196606, 65536, 2, 262142, 327680, 3, 327678, 65536, 2, 393214, 65536, 2, 458750, 65536, 2, 524286, 65536, 2, 589822, 65536, 2, 655358, 65536, 2, 720894, 65536, 2, 786430, 65536, 2, 851966, 65536, 2, -1, 65536, 2, 65535, 65536, 2, 131071, 65536, 2, 196607, 65536, 2, 262143, 65536, 2, 327679, 65536, 2, 393215, 65536, 2, 458751, 65536, 2, 524287, 65536, 2, 589823, 65536, 2, 655359, 65536, 2, 720895, 65536, 2, 786431, 65536, 2, 851967, 65536, 2, -786432, 65536, 2, -720896, 65536, 2, -655360, 65536, 2, -589824, 65536, 2, -524288, 65536, 2, -458752, 65536, 2, -393216, 65536, 2, -327680, 65536, 2, -262144, 65536, 2, -196608, 65536, 2, -131072, 65536, 2, -65536, 327680, 3, 0, 65536, 2, 65536, 65536, 2, 131072, 65536, 2, 196608, 65536, 2, 262144, 65536, 2, 327680, 65536, 2, 393216, 196608, 3, 458752, 65536, 2, 524288, 65536, 2, 589824, 393216, 3, 655360, 65536, 2, 720896, 65536, 2, 786432, 65536, 2, -786431, 393216, 3, -720895, 65536, 2, -655359, 65536, 2, -589823, 65536, 2, -524287, 393216, 3, -458751, 65536, 2, -393215, 65536, 2, -327679, 65536, 2, -262143, 65536, 2, -196607, 65536, 2, -131071, 65536, 2, -65535, 65536, 2, 1, 65536, 2, 65537, 65536, 2, 131073, 65536, 2, 196609, 65536, 2, 262145, 65536, 2, 327681, 65536, 2, 393217, 65536, 2, 458753, 65536, 2, 524289, 65536, 2, 589825, 65536, 2, 655361, 65536, 2, 720897, 65536, 2, 786433, 65536, 2, -786430, 65536, 2, -720894, 65536, 2, -655358, 65536, 2, -589822, 65536, 2, -524286, 65536, 2, -458750, 65536, 2, -393214, 65536, 2, -327678, 65536, 2, -262142, 65536, 2, -196606, 65536, 2, -131070, 65536, 2, -65534, 65536, 2, 2, 65536, 2, 65538, 262144, 3, 131074, 65536, 2, 196610, 65536, 2, 262146, 65536, 2, 327682, 65536, 2, 393218, 327680, 3, 458754, 65536, 2, 524290, 65536, 2, 589826, 65536, 2, 655362, 65536, 2, 720898, 196608, 3, 786434, 65536, 2, -786429, 65536, 2, -720893, 65536, 2, -655357, 65536, 2, -589821, 65536, 2, -524285, 65536, 2, -458749, 65536, 2, -393213, 65536, 2, -327677, 65536, 2, -262141, 262144, 3, -196605, 65536, 2, -131069, 65536, 2, -65533, 65536, 2, 3, 65536, 2, 65539, 65536, 2, 131075, 65536, 2, 196611, 65536, 2, 262147, 65536, 2, 327683, 65536, 2, 393219, 65536, 2, 458755, 65536, 2, 524291, 65536, 2, 589827, 65536, 2, 655363, 65536, 2, 720899, 65536, 2, 786435, 65536, 2, -786428, 65536, 2, -720892, 65536, 2, -655356, 65536, 2, -589820, 65536, 2, -524284, 65536, 2, -458748, 65536, 2, -393212, 262144, 3, -327676, 65536, 2, -262140, 65536, 2, -196604, 65536, 2, -131068, 65536, 2, -65532, 65536, 2, 4, 65536, 2, 65540, 65536, 2, 131076, 65536, 2, 196612, 65536, 2, 262148, 65536, 2, 327684, 65536, 2, 393220, 65536, 2, 458756, 65536, 2, 524292, 65536, 2, 589828, 65536, 2, 655364, 393216, 3, 720900, 65536, 2, 786436, 65536, 2, -786427, 65536, 2, -720891, 65536, 2, -655355, 65536, 2, -589819, 65536, 2, -524283, 65536, 2, -458747, 65536, 2, -393211, 65536, 2, -327675, 65536, 2, -262139, 65536, 2, -196603, 65536, 2, -131067, 65536, 2, -65531, 65536, 2, 5, 65536, 2, 65541, 65536, 2, 131077, 65536, 2, 196613, 65536, 2, 262149, 65536, 2, 327685, 65536, 2, 393221, 65536, 2, 458757, 65536, 2, 524293, 65536, 2, 589829, 65536, 2, 655365, 65536, 2, 720901, 65536, 2, 786437, 65536, 2, -786426, 65536, 2, -720890, 65536, 2, -655354, 65536, 2, -589818, 65536, 2, -524282, 65536, 2, -458746, 65536, 2, -393210, 65536, 2, -327674, 65536, 2, -262138, 65536, 2, -196602, 65536, 2, -131066, 65536, 2, -65530, 65536, 2, 6, 65536, 2, 65542, 196608, 3, 131078, 65536, 2, 196614, 327680, 3, 262150, 65536, 2, 327686, 65536, 2, 393222, 65536, 2, 458758, 65536, 2, 524294, 65536, 2, 589830, 65536, 2, 655366, 65536, 2, 720902, 65536, 2, 786438, 65536, 2, -786425, 65536, 2, -720889, 65536, 2, -655353, 65536, 2, -589817, 65536, 2, -524281, 65536, 2, -458745, 65536, 2, -393209, 65536, 2, -327673, 65536, 2, -262137, 65536, 2, -196601, 65536, 2, -131065, 65536, 2, -65529, 65536, 2, 7, 65536, 2, 65543, 65536, 2, 131079, 65536, 2, 196615, 65536, 2, 262151, 65536, 2, 327687, 65536, 2, 393223, 65536, 2, 458759, 65536, 2, 524295, 65536, 2, 589831, 65536, 2, 655367, 65536, 2, 720903, 65536, 2, 786439, 65536, 2, -786424, 65536, 2, -720888, 65536, 2, -655352, 65536, 2, -589816, 65536, 2, -524280, 65536, 2, -458744, 65536, 2, -393208, 65536, 2, -327672, 65536, 2, -262136, 65536, 2, -196600, 65536, 2, -131064, 65536, 2, -65528, 65536, 2, 8, 65536, 2, 65544, 65536, 2, 131080, 65536, 2, 196616, 65536, 2, 262152, 65536, 2, 327688, 65536, 2, 393224, 65536, 2, 458760, 65536, 2, 524296, 65536, 2, 589832, 65536, 2, 655368, 65536, 2, 720904, 65536, 2, 786440, 65536, 2, -786423, 65536, 2, -720887, 65536, 2, -655351, 327680, 3, -589815, 65536, 2, -524279, 65536, 2, -458743, 65536, 2, -393207, 65536, 2, -327671, 65536, 2, -262135, 65536, 2, -196599, 65536, 2, -131063, 65536, 2, -65527, 65536, 2, 9, 65536, 2, 65545, 65536, 2, 131081, 65536, 2, 196617, 65536, 2, 262153, 65536, 2, 327689, 65536, 2, 393225, 65536, 2, 458761, 65536, 2, 524297, 393216, 3, 589833, 65536, 2, 655369, 65536, 2, 720905, 65536, 2, 786441, 65536, 2, -786422, 65536, 2, -720886, 65536, 2, -655350, 65536, 2, -589814, 65536, 2, -524278, 65536, 2, -458742, 65536, 2, -393206, 65536, 2, -327670, 65536, 2, -262134, 65536, 2, -196598, 65536, 2, -131062, 65536, 2, -65526, 65536, 2, 10, 65536, 2, 65546, 65536, 2, 131082, 65536, 2, 196618, 65536, 2, 262154, 65536, 2, 327690, 65536, 2, 393226, 65536, 2, 458762, 65536, 2, 524298, 65536, 2, 589834, 65536, 2, 655370, 65536, 2, 720906, 65536, 2, 786442, 65536, 2, -786443, 0, 1, -786442, 65536, 1, -786441, 65536, 1, -786440, 65536, 1, -786439, 65536, 1, -786438, 65536, 1, -786437, 65536, 1, -786436, 65536, 1, -786435, 65536, 1, -786434, 65536, 1, -786433, 65536, 1, -851968, 65536, 1, -851967, 65536, 1, -851966, 65536, 1, -851965, 65536, 1, -851964, 65536, 1, -851963, 65536, 1, -851962, 65536, 1, -851961, 65536, 1, -851960, 65536, 1, -851959, 65536, 1, -851958, 65536, 1, -851957, 131072, 1, -786421, 131072, 2, -720885, 131072, 2, -655349, 131072, 2, -589813, 131072, 2, -524277, 131072, 2, -458741, 131072, 2, -393205, 131072, 2, -327669, 131072, 2, -262133, 131072, 2, -196597, 131072, 2, -131061, 131072, 2, -65525, 131072, 2, 11, 131072, 2, 65547, 131072, 2, 131083, 131072, 2, 196619, 131072, 2, 262155, 131072, 2, 327691, 131072, 2, 393227, 131072, 2, 458763, 131072, 2, 524299, 131072, 2, 589835, 131072, 2, 655371, 131072, 2, 720907, 131072, 2, 786443, 131072, 2, 851979, 131072, 3, 917493, 0, 3, 917494, 65536, 3, 917495, 65536, 3, 917496, 65536, 3, 917497, 65536, 3, 917498, 65536, 3, 917499, 65536, 3, 917500, 65536, 3, 917501, 65536, 3, 917502, 65536, 3, 917503, 65536, 3, 851968, 65536, 3, 851969, 65536, 3, 851970, 65536, 3, 851971, 65536, 3, 851972, 65536, 3, 851973, 65536, 3, 851974, 65536, 3, 851975, 65536, 3, 851976, 65536, 3, 851977, 65536, 3, 851978, 65536, 3, -720907, 0, 2, -655371, 0, 2, -589835, 0, 2, -524299, 0, 2, -458763, 0, 2, -393227, 0, 2, -327691, 0, 2, -262155, 0, 2, -196619, 0, 2, -131083, 0, 2, -65547, 0, 2, -11, 0, 2, 65525, 0, 2, 131061, 0, 2, 196597, 0, 2, 262133, 0, 2, 327669, 0, 2, 393205, 0, 2, 458741, 0, 2, 524277, 0, 2, 589813, 0, 2, 655349, 0, 2, 720885, 0, 2, 786421, 0, 2, 851957, 0, 2)
layer_1/name = "top Ground"
layer_1/z_index = -5
layer_1/tile_data = PackedInt32Array()

[node name="Camera2D" type="Camera2D" parent="."]
